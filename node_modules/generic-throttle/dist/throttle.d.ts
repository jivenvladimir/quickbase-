/// <reference types="node" />
declare type PendingRequest = {
    resolve: Function;
    reject: Function;
    fn?: Function;
};
export declare class Throttle {
    requestsPerPeriod: number;
    periodLength: number;
    errorOnLimit: boolean;
    PromiseImplementation: PromiseConstructorLike;
    protected _tick: NodeJS.Timeout | undefined;
    protected _nRequests: number;
    protected _times: number[];
    protected _pending: PendingRequest[];
    constructor(requestsPerPeriod?: number, periodLength?: number, errorOnLimit?: boolean, PromiseImplementation?: PromiseConstructorLike);
    private _execute;
    private _testTick;
    acquire<T = any>(fn?: () => T): Promise<T>;
    clear(): this;
    flush(): Promise<any[]>;
}
export {};
